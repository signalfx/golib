name: build-and-test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-24.04
    env:
      REQUIRED_COVERAGE: 80
    strategy:
      matrix:
        GO_VERSION: [ "1.23", "1.24", "1.25" ]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.GO_VERSION }}

      - name: Caching dependency
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Run tests
        run: |
          go mod download
          set -x
          go test -covermode atomic -race -timeout 300s -coverprofile ./coverage.out $(go list ./...)
          total_coverage=$(go tool cover -func coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "Total coverage: ${total_coverage}%"
          if (( $(echo "${total_coverage} < ${REQUIRED_COVERAGE}" | bc -l) )); then
            echo "Coverage ${total_coverage}% is below required ${REQUIRED_COVERAGE}%"
            exit 1
          fi
          echo "Coverage check passed: ${total_coverage}% >= ${REQUIRED_COVERAGE}%"
